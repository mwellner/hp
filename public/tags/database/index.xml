<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Database on mathias wellner</title>
    <link>http://www.mwellner.de/tags/database/index.xml</link>
    <description>Recent content in Database on mathias wellner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-de</language>
    <atom:link href="http://www.mwellner.de/tags/database/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Theater Production and Actor Database</title>
      <link>http://www.mwellner.de/post/2017-01-23-theater-production-and-actor-database/</link>
      <pubDate>Mon, 23 Jan 2017 21:39:44 +0000</pubDate>
      
      <guid>http://www.mwellner.de/post/2017-01-23-theater-production-and-actor-database/</guid>
      <description>

&lt;p&gt;Currently, I am working on a hobby project, a &lt;a href=&#34;https://github.com/mwellner/mwtdb&#34; target=&#34;_blank&#34; class=&#34;broken_link&#34;&gt;theater production and actor database&lt;/a&gt; (mwtdb for short). It is visible on GitHub and open source.&lt;/p&gt;

&lt;h3 id=&#34;requirements&#34;&gt;Requirements&lt;/h3&gt;

&lt;p&gt;What I want to create is something similar to &lt;a href=&#34;http://www.imdb.com/&#34; target=&#34;_blank&#34;&gt;IMDb&lt;/a&gt;, which focuses on movies, TV and celebreties, but for amateur theater. A very basic version will contain actors, directors and technicians, contributing to productions.&lt;/p&gt;

&lt;p&gt;From a technical point of view, I will create a web application, using &lt;a href=&#34;https://angular.io/&#34; target=&#34;_blank&#34;&gt;Angular&lt;/a&gt; and &lt;a href=&#34;https://neo4j.com/&#34; target=&#34;_blank&#34; class=&#34;broken_link&#34;&gt;Neo4j&lt;/a&gt;, a &lt;a href=&#34;https://en.wikipedia.org/wiki/Graph_database&#34; target=&#34;_blank&#34; class=&#34;broken_link&#34;&gt;graph database&lt;/a&gt;. The hope is that a graphical representation of the data at hand is better suited for retrieving the right data for a particular view.&lt;/p&gt;

&lt;h3 id=&#34;first-steps&#34;&gt;First Steps&lt;/h3&gt;

&lt;p&gt;I have used &lt;a href=&#34;https://cli.angular.io/&#34; target=&#34;_blank&#34; class=&#34;broken_link&#34;&gt;Angular CLI&lt;/a&gt; to initialize my application. &lt;a href=&#34;https://v4-alpha.getbootstrap.com/&#34; target=&#34;_blank&#34; class=&#34;broken_link&#34;&gt;Bootstrap&lt;/a&gt; will be my front-end framework, along with &lt;a href=&#34;https://ng-bootstrap.github.io/&#34; target=&#34;_blank&#34; class=&#34;broken_link&#34;&gt;ng-bootstrap&lt;/a&gt; for some interactive components.&lt;/p&gt;

&lt;p&gt;My first Angular components were &lt;a href=&#34;https://github.com/mwellner/mwtdb/blob/master/src/app/people/people.component.ts&#34; target=&#34;_blank&#34; class=&#34;broken_link&#34;&gt;people&lt;/a&gt; (actors, directors) and &lt;a href=&#34;https://github.com/mwellner/mwtdb/blob/master/src/app/productions/productions.component.ts&#34; target=&#34;_blank&#34; class=&#34;broken_link&#34;&gt;productions&lt;/a&gt;, showing a list of existing items and allowing to add more entries. For the graph database, I have created a &lt;a href=&#34;https://github.com/mwellner/mwtdb/blob/master/src/app/database.service.ts&#34; target=&#34;_blank&#34; class=&#34;broken_link&#34;&gt;database service&lt;/a&gt;, which implements a few basic queries.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Docker Compose File for WordPress &amp;#038; MariaDB</title>
      <link>http://www.mwellner.de/post/2016-09-14-docker-compose-file-for-wordpress-mariadb/</link>
      <pubDate>Wed, 14 Sep 2016 22:33:45 +0000</pubDate>
      
      <guid>http://www.mwellner.de/post/2016-09-14-docker-compose-file-for-wordpress-mariadb/</guid>
      <description>&lt;p&gt;After some frustrating attempts to create a working Docker configuration for a WordPress system, I have finally found a working solution. It uses the default &lt;a href=&#34;https://hub.docker.com/_/wordpress/&#34; title=&#34;WordPress image&#34; target=&#34;_blank&#34;&gt;WordPress Docker image&lt;/a&gt; and &lt;a href=&#34;https://hub.docker.com/_/mariadb/&#34; title=&#34;MariaDB image&#34; target=&#34;_blank&#34;&gt;MariaDB&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is a minimal configuration, you may also want to specify a data volume for persistence.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;# docker-compose.yml file for a minimal working WordPress instance with separate database&amp;lt;br /&amp;gt;
version: &#39;2&#39;&amp;lt;br /&amp;gt;
services:&amp;lt;br /&amp;gt;
&amp;amp;emsp;wordpress:&amp;lt;br /&amp;gt;
&amp;amp;emsp;&amp;amp;emsp;image: wordpress&amp;lt;br /&amp;gt;
&amp;amp;emsp;&amp;amp;emsp;links:&amp;lt;br /&amp;gt;
&amp;amp;emsp;&amp;amp;emsp;- wordpress_db:mysql&amp;lt;br /&amp;gt;
&amp;amp;emsp;&amp;amp;emsp;ports:&amp;lt;br /&amp;gt;
&amp;amp;emsp;&amp;amp;emsp;- 8090:80&amp;lt;br /&amp;gt;
&amp;amp;emsp;&amp;amp;emsp;environment:&amp;lt;br /&amp;gt;
&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;WORDPRESS_DB_HOST: wordpress_db:3306&amp;lt;br /&amp;gt;
&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;WORDPRESS_DB_PASSWORD: password&amp;lt;br /&amp;gt;
&amp;amp;emsp;wordpress_db:&amp;lt;br /&amp;gt;
&amp;amp;emsp;&amp;amp;emsp;image: mariadb&amp;lt;br /&amp;gt;
&amp;amp;emsp;&amp;amp;emsp;environment:&amp;lt;br /&amp;gt;
&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;MYSQL_ROOT_PASSWORD: password&amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creating a participant database</title>
      <link>http://www.mwellner.de/post/2009-04-24-creating-a-participant-database/</link>
      <pubDate>Fri, 24 Apr 2009 18:00:26 +0000</pubDate>
      
      <guid>http://www.mwellner.de/post/2009-04-24-creating-a-participant-database/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Problem&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The initial intention was to keep track of those people who have participated in one of our rowing studies. The second goal was to keep track of how our raw data is organised. Therefore, I designed a relational database with MS Access. In this article I will focus on general database design issues and how to access the database with Matlab. You could use any other &lt;a href=&#34;http://en.wikipedia.org/wiki/Relational_database_management_system&#34;&gt;relational database management system&lt;/a&gt;, which is compatible to the &lt;a href=&#34;http://en.wikipedia.org/wiki/SQL&#34;&gt;SQL standard&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A nice side-effect of such a database is their possible integration in Matlab. We can get the names of all participants of a certain study and analyse their data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Database structure&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first relation contains the &lt;em&gt;participant&lt;/em&gt; information.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ID [primary key]&lt;/li&gt;
&lt;li&gt;LastName&lt;/li&gt;
&lt;li&gt;FirstName&lt;/li&gt;
&lt;li&gt;Gender&lt;/li&gt;
&lt;li&gt;BirthDate&lt;/li&gt;
&lt;li&gt;CategoryID [foreign key]&lt;/li&gt;
&lt;li&gt;Comment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The rowing skill of the participant should be identified in a repetible way, therefore a separate relation contains all possible skill levels.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Category&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ID [primary key]&lt;/li&gt;
&lt;li&gt;Label&lt;/li&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The next obvious relation describes our studies.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Study&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ID [primary key]&lt;/li&gt;
&lt;li&gt;Label&lt;/li&gt;
&lt;li&gt;Responsible person(s)&lt;/li&gt;
&lt;li&gt;Data folder&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We now need a connection between participants and studies, including the possibility of several runs. This is implemented with the relation &lt;em&gt;Participant takes part&lt;/em&gt;. Note that the primary key is a combination of ParticipantID, StudyID, and RunNumber to prevent double-insertion of data.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ParticipantID [primary key, foreign key]&lt;/li&gt;
&lt;li&gt;StudyID [primary key, foreign key]&lt;/li&gt;
&lt;li&gt;RunDate&lt;/li&gt;
&lt;li&gt;RunNumber [primary key]&lt;/li&gt;
&lt;li&gt;DataValid&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For our &lt;em&gt;raw variables&lt;/em&gt; (oar angles, seat position, physiological data) we also define a relation.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Id [primary key]&lt;/li&gt;
&lt;li&gt;Name&lt;/li&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;li&gt;Unit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our raw data comes in a huge matrix, where each row contains the recording at one specific point in time and each column one raw variable. The assignment of raw data to columns can differ for different studies.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Raw variable is in column&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;RawVariableID [primary key, foreign key]&lt;/li&gt;
&lt;li&gt;StudyID [primary key, foreign key]&lt;/li&gt;
&lt;li&gt;Column (in xPC output log)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Database access with Matlab&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We can now use the power of SQL statements to query the database for a specific participant. As a more complex example, I will demonstrate how to get all participants of one study.&lt;/p&gt;

&lt;p&gt;The following Matlab code builds an SQL query and executes it with an existing database connection (&lt;code&gt;database&lt;/code&gt; command). You need to define an ODBC connection first, see the Matlab documentation for more details on that.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;br /&amp;gt;
% define parts of SQL statement&amp;lt;br /&amp;gt;
study = &#39;&#39;&#39;Study1&#39;&#39;&#39;; % define study, add addition &#39;&#39; because of spaces&amp;lt;br /&amp;gt;
columns = &#39;LastName, FirstName&#39;; % define columns for selection&amp;lt;br /&amp;gt;
from = &#39;Participant p, TakesPart t, Study s&#39;; % define tables for selection&amp;lt;br /&amp;gt;
where = [&#39;p.ID = t.ParticipantID AND s.ID = t.StudyID AND s.Label = &#39;, study]; % define inner join conditions&amp;lt;br /&amp;gt;
order = &#39;LastName, FirstName&#39;; % define order of results&amp;lt;br /&amp;gt;
% combine parts to SQL query&amp;lt;br /&amp;gt;
query = sprintf(&#39;SELECT %s FROM %s WHERE %s ORDER BY %s&#39;, columns, from, where, order);&amp;lt;br /&amp;gt;
curs = exec(DatabaseConnection, query); % execute SQL query&amp;lt;br /&amp;gt;
curs = fetch(curs); % fetch data in same cursor structure&amp;lt;br /&amp;gt;
curs.Data&amp;lt;br /&amp;gt;
close(curs);&amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The created query is:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SELECT LastName, FirstName FROM Participant p, TakesPart t, Study s WHERE p.ID = t.ParticipantID AND s.ID = t.StudyID AND s.Label = &#39;Study1&#39; ORDER BY LastName, FirstName&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I showed how to design a participant database and query it with Matlab.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Online Database for Bibliographic Information</title>
      <link>http://www.mwellner.de/post/2005-07-28-online-database-for-bibliographic-information/</link>
      <pubDate>Thu, 28 Jul 2005 21:04:20 +0000</pubDate>
      
      <guid>http://www.mwellner.de/post/2005-07-28-online-database-for-bibliographic-information/</guid>
      <description>&lt;p&gt;The common fate of scientists is to read papers. The problem is to maintain the overview over that ever increasing heap of papers and to be able to cite any of them. If you are working mainly on one computer, a program will help to organize and adminsitrate the bibliographical information. But now imagine you are working on multiple systems, always needing to carry your database with you. That really sucks.&lt;/p&gt;

&lt;p&gt;The solution is an online database! I found &lt;a href=&#34;http://www.citeulike.org&#34;&gt;CiteULike&lt;/a&gt; and I&amp;#8217;m really impressed. It&amp;#8217;s free and seems very practical. You even can add articles with one special link, provided the website is supported. But my favorite paper-search websites (&lt;a href=&#34;https://ecopyright.ieee.org/xplore/ie-notice.html&#34;&gt;IEEE Xplore&lt;/a&gt; and &lt;a href=&#34;http://medline.cos.com&#34;&gt;MedLine&lt;/a&gt;{.broken_link}) are included, so that will save me a lot of work.&lt;/p&gt;

&lt;p&gt;The database supports the BibTex format for exporting data, what is really convenient for me to include into papers. So that really seems a nice tool to work with!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>